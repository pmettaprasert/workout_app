// Mocks generated by Mockito 5.4.5 from annotations
// in hwk3/test/mocks/mock_group_workout_session_data_source.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:hwk3/models/group_workout_session.dart' as _i4;
import 'package:hwk3/service/firebase/group_workout_session_data_source.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GroupWorkoutSessionDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupWorkoutSessionDataSource extends _i1.Mock
    implements _i2.GroupWorkoutSessionDataSource {
  MockGroupWorkoutSessionDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> createGroupWorkoutSession(
          _i4.GroupWorkoutSession? session) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGroupWorkoutSession,
          [session],
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #createGroupWorkoutSession,
            [session],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<_i4.GroupWorkoutSession?> getGroupWorkoutSessionById(
          String? workoutId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupWorkoutSessionById,
          [workoutId],
        ),
        returnValue: _i3.Future<_i4.GroupWorkoutSession?>.value(),
      ) as _i3.Future<_i4.GroupWorkoutSession?>);

  @override
  _i3.Future<List<_i4.GroupWorkoutSession>> getGroupWorkoutsForUser(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupWorkoutsForUser,
          [userId],
        ),
        returnValue: _i3.Future<List<_i4.GroupWorkoutSession>>.value(
            <_i4.GroupWorkoutSession>[]),
      ) as _i3.Future<List<_i4.GroupWorkoutSession>>);

  @override
  _i3.Future<void> updateParticipantContributions({
    required String? workoutId,
    required String? userId,
    required Map<String, int>? newContributions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateParticipantContributions,
          [],
          {
            #workoutId: workoutId,
            #userId: userId,
            #newContributions: newContributions,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteGroupWorkoutSession(String? workoutId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGroupWorkoutSession,
          [workoutId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.GroupWorkoutSession?> getGroupWorkoutSessionByInviteCode(
          String? inviteCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupWorkoutSessionByInviteCode,
          [inviteCode],
        ),
        returnValue: _i3.Future<_i4.GroupWorkoutSession?>.value(),
      ) as _i3.Future<_i4.GroupWorkoutSession?>);
}
