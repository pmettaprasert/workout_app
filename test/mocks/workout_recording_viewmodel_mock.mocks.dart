// Mocks generated by Mockito 5.4.5 from annotations
// in hwk3/test/mocks/workout_recording_viewmodel_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i6;

import 'package:hwk3/models/exercise.dart' as _i3;
import 'package:hwk3/models/workout_plan.dart' as _i5;
import 'package:hwk3/viewmodels/workout_recording_viewmodel.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WorkoutRecordingViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkoutRecordingViewModel extends _i1.Mock
    implements _i2.WorkoutRecordingViewModel {
  MockWorkoutRecordingViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<_i3.Exercise, int> get actualOutputs => (super.noSuchMethod(
        Invocation.getter(#actualOutputs),
        returnValue: <_i3.Exercise, int>{},
      ) as Map<_i3.Exercise, int>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<List<_i5.WorkoutPlan>> getAllPlans() => (super.noSuchMethod(
        Invocation.method(
          #getAllPlans,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.WorkoutPlan>>.value(<_i5.WorkoutPlan>[]),
      ) as _i4.Future<List<_i5.WorkoutPlan>>);

  @override
  _i4.Future<void> selectPlanByIndex(int? index) => (super.noSuchMethod(
        Invocation.method(
          #selectPlanByIndex,
          [index],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void updateActualOutput(
    _i3.Exercise? exercise,
    int? newValue,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateActualOutput,
          [
            exercise,
            newValue,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void recordWorkout() => super.noSuchMethod(
        Invocation.method(
          #recordWorkout,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> reloadPlans() => (super.noSuchMethod(
        Invocation.method(
          #reloadPlans,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
